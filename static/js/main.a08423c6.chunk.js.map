{"version":3,"sources":["components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","handleInputChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","type","onChange","Component","Filter","ContactsItem","contact","onDeleteContact","onClick","id","ContactsList","contacts","map","App","filter","addContact","newContact","shortid","generate","changeFilter","currentTarget","data","find","alert","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","console","log","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a08423c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import React, {Component} from 'react';\r\n// import shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state= {\r\n      name: '',\r\n      number: '',\r\n    }\r\n  \r\n    handleInputChange = (event) => {\r\n      const { name, value } = event.target;\r\n\r\n      this.setState({ [name]: value });\r\n  };\r\n  \r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      if (!this.state.name || !this.state.number) {\r\n          return;\r\n        }\r\n      this.props.onSubmitData ({ ...this.state });\r\n      this.reset();\r\n  }\r\n  \r\n    reset = () => {\r\n      this.setState({name: '', number: ''})\r\n    }\r\n  \r\n      render() {   \r\n        const { name, number } = this.state; \r\n          return (\r\n            <form onSubmit={this.handleSubmit}>\r\n              <h2>Name:</h2>\r\n              <input \r\n                  type=\"text\" \r\n                  value={name}\r\n                  name=\"name\"\r\n                  onChange={this.handleInputChange} \r\n              />\r\n              <h2>Number:</h2>\r\n              <input \r\n                  type=\"text\" \r\n                  name=\"number\" \r\n                  value={number}\r\n                  onChange={this.handleInputChange} \r\n              />\r\n              <br></br>\r\n              <button type=\"submit\"> Add new contact:</button>\r\n          </form>\r\n    )\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitData: PropTypes.func.isRequired,\r\n}\r\n  \r\n  export default ContactForm;","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label>\r\n        Find contacts by name:\r\n        <input type=\"text\" value={value} onChange={onChange}/>\r\n    </label>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsItem = ({ contact, onDeleteContact })=> (\r\n    <> \r\n        <span>\r\n            {contact.name}: {contact.number}\r\n        </span>\r\n        <button onClick= {()=>onDeleteContact(contact.id)}>Delete</button>\r\n    </>\r\n)\r\n\r\n\r\nContactsItem.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsItem;","import PropTypes from 'prop-types';\r\nimport ContactsItem from '../ContactsItem';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact}) => {\r\n  return(\r\n      <ul>\r\n          {contacts.map(contact => (\r\n              <li key = {contact.id}>\r\n                  <ContactsItem contact={contact} onDeleteContact={onDeleteContact}/>\r\n              </li>\r\n          ))}\r\n      </ul>\r\n  )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          number: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactsList from './components/ContactsList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      console.log('Обновилось поле contacts, записываю contacts в хранилище');\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  onDeleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id),\n    });\n  };\n\n  onSubmitData = data => {\n    const { contacts } = this.state;\n\n    const addContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (contacts.find(contact => contact.name === addContact.name)) {\n      alert(`${addContact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState({\n      contacts: [...contacts, addContact],\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <Container>\n          <h1>Phonebook:</h1>\n          <ContactForm onSubmitData={this.onSubmitData} />\n          {contacts.length !==0 && (\n            <>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChange={this.changeFilter} />\n            )}\n            <h2>Contacts:</h2>\n            <ContactsList\n              contacts={this.state.contacts}\n              onDeleteContact={this.onDeleteContact}\n            />\n            </>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}